This repo is to be used for educational purposes only, and is intended to be run against your own machine. We do not condone the use of these skills/techniques outside of this lab environment. 



SCENARIO
A local kitten daycare has recently suffered a zero-day injection exploit resulting in full system compromise. A digital forensics team investigating the incident has created a LAB environment meant to serve as a proof-of-concept for what happened. Can you replicate what happened that fatefull day for the local kitten daycare?



PRE-REQUISITES 
1. Docker Desktop https://www.docker.com/products/docker-desktop/
2. Git https://git-scm.com/book/en/v2/Getting-Started-Installing-Git


STARTING THE LAB
**Be sure to run the below commands as an administrative/root user, or with administrative/root privileges (e.g. 'sudo git').
1. Open Docker Desktop
2. Run 'git clone https://github.com/sgwgsw/Log4j_LAB-Docker.git' in a terminal window.
3. Change to the Log4j_LAB-Docker folder and run  'docker compose up -d'
4. Once the command has finished running, select 'Containers / Apps' in Docker Desktop to confirm all containers in the stack are running


EXPLOIT HINTS
1. The web_server container is running the open source library Log4j v2.14.0. It is hosting a web server on port 8080.
2. The curl_instance container should be used to send the exploit string; you may consider using the curl command.
3. The c2_instance container should be used as your c2 (command and control) instance; you may consider listening on port 9999.
4. The ldap_server container is hosting the reference object, 'a'; reference objects respond with compiled java classes.
5. The http_server container is hosting the aformentioned compiled java code; the ldap_server will reach out and get said java code, if properly called/referenced.
6. Exploit payloads must be sent using IPs, not hostnames. Use 'ping -c 1 <container_hostname>' in curl_instance to get the IP of any container. Hostnames are:
	web_server
	http_server
	ldap_server
7. Prove your access when you think you're complete with the exercise. 



DOCKER HINTS
1. You will need two simultaneous docker CLI sessions throughout the course of this exercise. To do so, hover over the container in Docker Desktop and click the 'CLI' button.



WHEN YOU ARE FINISHED
1. Close any CLI/terminal sessions
2. Click the stop button in 'Containers / Apps' on Docker Desktop
3. Run 'docker system prune -a' on the host machine, and press 'y' when prompted
4. Delete the cloned Log4j_LAB-Docker repo/folder on your machine
5. Clear your trash/recycling bin
